#include <iostream>

using namespace std;

typedef struct Node
{
    int value;
    Node* left;
    Node* right;
};

typedef struct Tree
{
    Node* root;
};

// 노드 생성
Node* makeNode(Node *left, int data, Node *right)
{
    Node *node = (Node *)malloc(sizeof(Node));
    node->value = data;
    node->left = left;
    node->right = right;

    return node;
}

// 중위 순회
void inOrder(Node* root)
{
    if (root == NULL)
        return;

    inOrder(root->left);
    cout << root->value << " ";
    inOrder(root->right);
}


/*
*           1
*          / \
          2   3
         / \
        4   5
*/
int main()
{
    Tree tree;
    Node* n4 = makeNode(NULL, 4, NULL);
    Node* n5 = makeNode(NULL, 5, NULL);
    Node* n2 = makeNode(n4, 2, n5);
    Node* n3 = makeNode(NULL, 3, NULL);
    Node* n1 = makeNode(n2, 1, n3);

    tree.root = n1;
    inOrder(tree.root);
}